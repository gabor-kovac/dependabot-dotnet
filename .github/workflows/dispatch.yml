name: Dispatch quality gate

on:
  repository_dispatch:
    types: [my-check]

jobs:
  check_trivy:
    permissions:
      checks: write   # Permission to create a Check Run
      contents: write # Permission to write a repository_dispatch requests
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
    - name: Acknowledge Request
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh api -X PATCH -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -f 'status=in_progress' \
          -f 'output[title]=Quality gate in progress' \
          -f 'output[summary]=Preparing to scan with Trivy' \
          -f 'output[images][][image_url]=https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTndvw076pug5uBbdakWWU10q9t4e1zsaV_oQ&s' \
          -f 'output[images][][alt]=Trivy logo' \
          /repos/${{ github.repository }}/check-runs/${{ github.event.client_payload.checkRunId }}
    
    - name: Install dependencies
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin v0.60.0
        pip install jtbl
    
    - name: Checkout source
      uses: actions/checkout@v4

    - run: chmod +x trivy-scan.sh
      
    - name: Run Trivy script
      id: trivy_scan_step
      run: ./trivy-scan.sh

    - name: Prepare results
      id: prepare_results
      if: always() && steps.trivy_scan_step.outcome == 'failure'
      run: |
        echo "output_summary_path<<EOF" >> $GITHUB_OUTPUT
        cat /tmp/trivy_output_summary.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Complete Check
      if: always() && steps.trivy_scan_step.outcome == 'success'
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh api -X PATCH -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/check-runs/${{ github.event.client_payload.checkRunId }} \
          --input - <<- EOF
          {
            "conclusion": "success",
            "output": {
              "title": "Quality gate passed âœ…",
              "summary": "Trivy scan completed successfully.",
              "text": ""
             }
          }
        EOF

    - name: Complete Check
      if: always() && steps.trivy_scan_step.outcome == 'failure'
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh api -X PATCH -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/check-runs/${{ github.event.client_payload.checkRunId }} \
          --input - <<- EOF
          {
            "conclusion": "failure",
            "output": {
              "title": "Quality gate failed ðŸš¨",
              "summary": "Trivy scan found issues that need to be addressed before merging is allowed.",
              "text": "${{ steps.prepare_results.outputs.output_summary_path }}"
             }
          }
        EOF